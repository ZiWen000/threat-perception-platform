<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tpp.threat_perception_platform.dao.HotfixMapper">

    <resultMap id="BaseResultMap" type="com.tpp.threat_perception_platform.pojo.Hotfix">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="mac" column="mac" jdbcType="VARCHAR"/>
            <result property="hotfixId" column="hotfix_id" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.tpp.threat_perception_platform.pojo.Hotfix">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="mac" column="mac" jdbcType="VARCHAR"/>
        <result property="hotfixId" column="hotfix_id" jdbcType="VARCHAR"/>

<!--        一对多-->
        <collection property="winCveDbList" column="hotfix_id" ofType="com.tpp.threat_perception_platform.pojo.WinCveDb" select="com.tpp.threat_perception_platform.dao.WinCveDbMapper.selectByKbId">

        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id,mac,hotfix_id
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from hotfix
        where  id = #{id,jdbcType=INTEGER} 
    </select>
    <select id="findAll" resultMap="BaseResultMap2">
        select
        <include refid="Base_Column_List" />
        from hotfix
        <where>
            <if test="param.keywords != null and param.keywords != ''">
                and mac like concat('%',#{param.keywords},'%')
            </if>
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from hotfix
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tpp.threat_perception_platform.pojo.Hotfix" useGeneratedKeys="true">
        insert into hotfix
        ( id,mac,hotfix_id
        )
        values (#{id,jdbcType=INTEGER},#{mac,jdbcType=VARCHAR},#{hotfixId,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tpp.threat_perception_platform.pojo.Hotfix" useGeneratedKeys="true">
        insert into hotfix
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="mac != null">mac,</if>
                <if test="hotfixId != null">hotfix_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="mac != null">#{mac,jdbcType=VARCHAR},</if>
                <if test="hotfixId != null">#{hotfixId,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <insert id="insertSelectiveBatch">
        insert into hotfix
        ( id,mac,hotfix_id
        )
        values
        <foreach collection="hotfixList" item="hotfix" separator=",">
            ( #{hotfix.id,jdbcType=INTEGER},#{hotfix.mac,jdbcType=VARCHAR},#{hotfix.hotfixId,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tpp.threat_perception_platform.pojo.Hotfix">
        update hotfix
        <set>
                <if test="mac != null">
                    mac = #{mac,jdbcType=VARCHAR},
                </if>
                <if test="hotfixId != null">
                    hotfix_id = #{hotfixId,jdbcType=VARCHAR},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tpp.threat_perception_platform.pojo.Hotfix">
        update hotfix
        set 
            mac =  #{mac,jdbcType=VARCHAR},
            hotfix_id =  #{hotfixId,jdbcType=VARCHAR}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
